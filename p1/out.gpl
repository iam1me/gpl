rectangle game_obj();
int max_object_count = 1000;
int game_object_count = 0;
pixmap game_objects[max_object_count];
int free_object_count = max_object_count;
int free_object_id[max_object_count];
int game_object_max_hp[max_object_count];
int game_object_hp[max_object_count];
int game_object_vulnerable[max_object_count];
int game_object_offset_x[max_object_count];
int game_object_offset_y[max_object_count];
int game_object_dest_col[max_object_count];
int game_object_dest_row[max_object_count];
int game_object_start_tick[max_object_count];
int game_object_end_tick[max_object_count];
int game_object_duration[max_object_count];
int game_object_frame[max_object_count];
int game_object_frame_rate[max_object_count];
int game_object_frame_count[max_object_count];
int game_object_move_frame_count[max_object_count];
int game_object_attack_frame_count[max_object_count];
int game_object_hit_frame_count[max_object_count];
int game_object_die_frame_count[max_object_count];
int game_object_direction[max_object_count];
pixmap game_object_macro_temp();
int enable_debug_mode = 1;
textbox txt_curr_anim();
int flag_uparrow = 0;
int flag_downarrow = 0;
int flag_leftarrow = 0;
int flag_rightarrow = 0;
int flag_spacebar = 0;
int flag_gameover = 0;
int spawn_rate = 50;
int last_spawn_tick = -1;
forward animation NullAnimation(pixmap null_obj);
forward animation GameAnimation(rectangle game_obj_param);
forward animation InitGameAnimation(rectangle game_init_obj);
int map_columns = 16;
int map_rows = 16;
int map_column_iterator = 0;
int map_row_iterator = 0;
int selected_tile_ndx = 0;
int map_tile_height = 32;
int map_tile_width = 32;
int enable_grid_mode = 1;
int grid_horizontal_line_count = map_rows - 1;
int grid_vertical_line_count = map_columns - 1;
rectangle grid_horizontal_lines[grid_horizontal_line_count];
rectangle grid_vertical_lines[grid_vertical_line_count];
int grid_column_iterator = 0;
int grid_row_iterator = 0;
int player_id = -1;
int player_total_hp = 3;
int player_hp = player_total_hp;
int heart_id[player_total_hp];
forward animation PlayerAnimation(pixmap player_obj);
forward animation HeartAnimation(pixmap heart_obj);
int slenderman_id = -1;
int slenderman_hp = 5;
forward animation SlendermanAnimation(pixmap slenderman_obj);
int current_room = 0;
int last_room = 0;
int room_count = 1;
int tile_object_id[map_columns*map_rows];
int tile_id[map_columns*map_rows];
string tile_fileset[map_columns*map_rows];
int tile_walkable[map_columns*map_rows];
forward animation TileAnimation(pixmap tile_obj);
rectangle clock();
int tick_count = 0;
int max_tick_count = 9999999;
forward animation ClockTickAnimation(rectangle clock_obj);
int window_width = map_tile_width * map_columns;
int window_height = map_tile_height * map_rows;
string window_title = "The Gypsy Rover";
initialization
{
 print("VERBOSE: " + "game_obj initialization...");
 game_obj.drawing_order = -3;
 game_obj.red = 0;
 game_obj.green = 0;
 game_obj.blue = 0;
 game_obj.animation_block = InitGameAnimation;
 txt_curr_anim.visible = enable_debug_mode;
 txt_curr_anim.text = "initializing...";
 txt_curr_anim.x = 0;
 txt_curr_anim.y = 50;
 txt_curr_anim.size = 0.1;
 for(game_obj.user_int = 0; game_obj.user_int < max_object_count; game_obj.user_int += 1)
 {
  game_objects[game_obj.user_int].user_int = game_obj.user_int;
  game_objects[game_obj.user_int].user_int3 = 5;
  game_objects[game_obj.user_int].user_string = "null";
  game_objects[game_obj.user_int].user_int4 = 0;
  game_objects[game_obj.user_int].user_int5 = 0;
  game_objects[game_obj.user_int].x = -1;
  game_objects[game_obj.user_int].y = -1;
  game_objects[game_obj.user_int].filename = "tile_black_patch.bmp";
  game_objects[game_obj.user_int].animation_block = NullAnimation;
  game_objects[game_obj.user_int].visible = 1;
  free_object_id[game_obj.user_int] = max_object_count - game_obj.user_int;
  game_object_max_hp[game_obj.user_int] = 0;
  game_object_hp[game_obj.user_int] = 0;
  game_object_vulnerable[game_obj.user_int] = 0;
  game_object_dest_col[game_obj.user_int] = -1;
  game_object_dest_row[game_obj.user_int] = -1;
  game_object_start_tick[game_obj.user_int] = 0;
  game_object_end_tick[game_obj.user_int] = 1;
  game_object_duration[game_obj.user_int] = 1;
  game_object_frame[game_obj.user_int] = 0;
  game_object_frame_rate[game_obj.user_int] = 1;
  game_object_frame_count[game_obj.user_int] = 1;
  game_object_move_frame_count[game_obj.user_int] = 1;
  game_object_attack_frame_count[game_obj.user_int] = 1;
  game_object_direction[game_obj.user_int] = 0;
  game_object_offset_x[game_obj.user_int] = 0;
  game_object_offset_y[game_obj.user_int] = 0;
 }
 game_object_macro_temp.x = -1;
 game_object_macro_temp.y = -1;
 game_object_macro_temp.visible = 0;
}
initialization
{
 for(grid_column_iterator = 0; grid_column_iterator < grid_vertical_line_count; grid_column_iterator += 1)
 {
  grid_vertical_lines[grid_column_iterator].x = (grid_column_iterator + 1) * map_tile_width;
  grid_vertical_lines[grid_column_iterator].y = 0;
  grid_vertical_lines[grid_column_iterator].w = 1;
  grid_vertical_lines[grid_column_iterator].h = window_height;
  grid_vertical_lines[grid_column_iterator].red = 0;
  grid_vertical_lines[grid_column_iterator].green = 0;
  grid_vertical_lines[grid_column_iterator].blue = 0;
  grid_vertical_lines[grid_column_iterator].drawing_order = 1;
  grid_vertical_lines[grid_column_iterator].visible = enable_grid_mode;
 }
 for(grid_row_iterator = 0; grid_row_iterator < grid_horizontal_line_count; grid_row_iterator += 1)
 {
  grid_horizontal_lines[grid_row_iterator].x = 0;
  grid_horizontal_lines[grid_row_iterator].y = (grid_row_iterator + 1) * map_tile_height;
  grid_horizontal_lines[grid_row_iterator].w = window_width;
  grid_horizontal_lines[grid_row_iterator].h = 1;
  grid_horizontal_lines[grid_row_iterator].red = 0;
  grid_horizontal_lines[grid_row_iterator].green = 0;
  grid_horizontal_lines[grid_row_iterator].blue = 0;
  grid_horizontal_lines[grid_row_iterator].drawing_order = 1;
  grid_horizontal_lines[grid_row_iterator].visible = enable_grid_mode;
 }
}
initialization
{
 if((game_object_count == max_object_count) || (free_object_count == 0)) { print("ERROR: " + "ERROR: The Max Game Object Count Exceeded"); exit(1); } player_id = free_object_id[free_object_count - 1]; if(game_objects[player_id].user_int2 != 0) { print("ERROR: " + "ERROR: Object Already Allocated"); exit(1); } print("VERBOSE: " + "CREATE_GAME_OBJECT - NEW ID: " + player_id); free_object_id[free_object_count - 1] = -1; free_object_count -= 1; game_object_count += 1; game_objects[player_id].visible = 1; game_objects[player_id].x = 0; game_objects[player_id].y = map_tile_height; game_objects[player_id].user_int = player_id; game_objects[player_id].user_int2 = 1;
 print("VERBOSE: " + "Player ID: " + player_id);
 game_objects[player_id].user_int3 = 5;
 game_objects[player_id].animation_block = PlayerAnimation;
 game_objects[player_id].drawing_order = 200;
 game_objects[player_id].user_string = "player";
 game_object_max_hp[player_id] = player_total_hp;
 game_object_hp[player_id] = player_total_hp;
 game_object_vulnerable[player_id] = 1;
 game_object_frame_rate[player_id] = 1;
 game_object_move_frame_count[player_id] = 9;
 game_object_attack_frame_count[player_id] = 6;
 game_object_hit_frame_count[player_id] = 1;
 game_object_die_frame_count[player_id] = 6;
 game_object_offset_x[player_id] = 16;
 game_object_offset_y[player_id] = 0;
 for(game_obj.user_int = 0; game_obj.user_int < player_total_hp; game_obj.user_int += 1)
 {
  if((game_object_count == max_object_count) || (free_object_count == 0)) { print("ERROR: " + "ERROR: The Max Game Object Count Exceeded"); exit(1); } heart_id[game_obj.user_int] = free_object_id[free_object_count - 1]; if(game_objects[heart_id[game_obj.user_int]].user_int2 != 0) { print("ERROR: " + "ERROR: Object Already Allocated"); exit(1); } print("VERBOSE: " + "CREATE_GAME_OBJECT - NEW ID: " + heart_id[game_obj.user_int]); free_object_id[free_object_count - 1] = -1; free_object_count -= 1; game_object_count += 1; game_objects[heart_id[game_obj.user_int]].visible = 1; game_objects[heart_id[game_obj.user_int]].x = 0; game_objects[heart_id[game_obj.user_int]].y = map_tile_height; game_objects[heart_id[game_obj.user_int]].user_int = heart_id[game_obj.user_int]; game_objects[heart_id[game_obj.user_int]].user_int2 = 1;
  game_objects[heart_id[game_obj.user_int]].user_string = "heart";
  game_objects[heart_id[game_obj.user_int]].user_int3 = 5;
  game_objects[heart_id[game_obj.user_int]].animation_block = HeartAnimation;
  game_objects[heart_id[game_obj.user_int]].drawing_order = 50;
  game_object_direction[heart_id[game_obj.user_int]] = 1;
  game_objects[heart_id[game_obj.user_int]].user_int4 = map_columns - game_obj.user_int - 1;
  game_objects[heart_id[game_obj.user_int]].user_int5 = map_rows - 1;
 }
}
initialization
{
 clock.drawing_order = -1;
 clock.red = 0;
 clock.green = 0;
 clock.blue = 0;
 clock.animation_block = ClockTickAnimation;
}
initialization
{
 for(game_obj.user_int = 0; game_obj.user_int < map_columns; game_obj.user_int += 1)
 {
  for(game_obj.user_int2 = 0; game_obj.user_int2 < map_rows; game_obj.user_int2 += 1)
  {
 game_obj.user_int3 = (game_obj.user_int) + (game_obj.user_int2) * map_columns;
 if((game_object_count == max_object_count) || (free_object_count == 0)) { print("ERROR: " + "ERROR: The Max Game Object Count Exceeded"); exit(1); } game_obj.user_int4 = free_object_id[free_object_count - 1]; if(game_objects[game_obj.user_int4].user_int2 != 0) { print("ERROR: " + "ERROR: Object Already Allocated"); exit(1); } print("VERBOSE: " + "CREATE_GAME_OBJECT - NEW ID: " + game_obj.user_int4); free_object_id[free_object_count - 1] = -1; free_object_count -= 1; game_object_count += 1; game_objects[game_obj.user_int4].visible = 1; game_objects[game_obj.user_int4].x = 0; game_objects[game_obj.user_int4].y = map_tile_height; game_objects[game_obj.user_int4].user_int = game_obj.user_int4; game_objects[game_obj.user_int4].user_int2 = 1;
 tile_object_id[game_obj.user_int3] = game_obj.user_int4;
 tile_fileset[game_obj.user_int3] = "tile_black_patch";
 game_objects[tile_object_id[(game_obj.user_int) + (game_obj.user_int2) * map_columns]].user_string = "tile";
 game_objects[tile_object_id[(game_obj.user_int) + (game_obj.user_int2) * map_columns]].filename = "tile_black_patch.bmp";
 if((game_obj.user_int == 0) || (game_obj.user_int2 == 0) || (game_obj.user_int == map_columns -1) || (game_obj.user_int2 == map_rows -1))
 {
  tile_id[game_obj.user_int3] = 0 + 9;
 }
 else
 {
  tile_id[game_obj.user_int3] = 30 + 9;
 }
 game_objects[tile_object_id[(game_obj.user_int) + (game_obj.user_int2) * map_columns]].drawing_order = 0;
 game_objects[tile_object_id[(game_obj.user_int) + (game_obj.user_int2) * map_columns]].visible = 1;
 game_objects[tile_object_id[(game_obj.user_int) + (game_obj.user_int2) * map_columns]].animation_block = TileAnimation;
 game_objects[tile_object_id[(game_obj.user_int) + (game_obj.user_int2) * map_columns]].user_int3 = 5;
 game_objects[tile_object_id[(game_obj.user_int) + (game_obj.user_int2) * map_columns]].user_int4 = game_obj.user_int;
 game_objects[tile_object_id[(game_obj.user_int) + (game_obj.user_int2) * map_columns]].user_int5 = game_obj.user_int2;
 game_objects[tile_object_id[(game_obj.user_int) + (game_obj.user_int2) * map_columns]].x = game_obj.user_int * map_tile_width - map_tile_width;
 game_objects[tile_object_id[(game_obj.user_int) + (game_obj.user_int2) * map_columns]].y = game_obj.user_int2 * map_tile_height;
  }
 }
 print("VERBOSE: " + "First Tile ID: " + tile_id[(0) + (0) * map_columns]);
 print("VERBOSE: " + "Last Tile ID: " + tile_id[(map_columns -1) + (map_rows -1) * map_columns]);
 game_object_macro_temp.user_int = (map_columns -2)/2 + 1;
 for(game_object_macro_temp.user_int2 = (map_rows -2)/2 + 1; game_object_macro_temp.user_int2 < map_rows -1; game_object_macro_temp.user_int2 += 1)
 {
  tile_id[(game_object_macro_temp.user_int-1) + (game_object_macro_temp.user_int2) * map_columns] = 10 + 3;
  tile_id[(game_object_macro_temp.user_int) + (game_object_macro_temp.user_int2) * map_columns] = 10 + 5;
 }
 game_object_macro_temp.user_int2 = (map_rows -2)/2 + 1;
 for(game_object_macro_temp.user_int = (map_columns-2)/2 + 2; game_object_macro_temp.user_int < map_columns -1; game_object_macro_temp.user_int += 1)
 {
  tile_id[(game_object_macro_temp.user_int) + (game_object_macro_temp.user_int2-1) * map_columns] = 10 + 7;
  tile_id[(game_object_macro_temp.user_int) + (game_object_macro_temp.user_int2) * map_columns] = 10 + 1;
 }
 game_object_macro_temp.user_int = (map_columns -2)/2 + 1;
 game_object_macro_temp.user_int2 = (map_rows -2)/2 + 1;
 tile_id[(game_object_macro_temp.user_int) + (game_object_macro_temp.user_int2) * map_columns] = 10 + 4;
 tile_id[(game_object_macro_temp.user_int-1) + (game_object_macro_temp.user_int2-1) * map_columns] = 10 + 6;
 tile_id[(game_object_macro_temp.user_int) + (game_object_macro_temp.user_int2-1) * map_columns] = 10 + 7;
 game_object_macro_temp.user_int2 = (map_rows-7); game_object_macro_temp.user_int3 = (map_rows-2); for(game_object_macro_temp.user_int = 9 + 1; game_object_macro_temp.user_int < 14; game_object_macro_temp.user_int += 1) { tile_id[(game_object_macro_temp.user_int) + (game_object_macro_temp.user_int2) * map_columns] = 20 + 7; tile_id[(game_object_macro_temp.user_int) + (game_object_macro_temp.user_int3) * map_columns] = 20 + 1; } game_object_macro_temp.user_int = 9; game_object_macro_temp.user_int3 = 14; for(game_object_macro_temp.user_int2 = (map_rows-7) + 1; game_object_macro_temp.user_int2 < (map_rows-2); game_object_macro_temp.user_int2 += 1) { tile_id[(game_object_macro_temp.user_int) + (game_object_macro_temp.user_int2) * map_columns] = 20 + 3; tile_id[(game_object_macro_temp.user_int3) + (game_object_macro_temp.user_int2) * map_columns] = 20 + 5; } tile_id[(9) + ((map_rows-7)) * map_columns] = 20 + 6; tile_id[(9) + ((map_rows-2)) * map_columns] = 20 + 0; tile_id[(14) + ((map_rows-7)) * map_columns] = 20 + 8; tile_id[(14) + ((map_rows-2)) * map_columns] = 20 + 2; for(game_object_macro_temp.user_int = 9 + 1; game_object_macro_temp.user_int < 14; game_object_macro_temp.user_int += 1) { for(game_object_macro_temp.user_int2 = (map_rows-7) + 1; game_object_macro_temp.user_int2 < (map_rows-2); game_object_macro_temp.user_int2 += 1) { tile_id[(game_object_macro_temp.user_int) + (game_object_macro_temp.user_int2) * map_columns] = 20 + 4; } }
}
animation PlayerAnimation(pixmap player_obj)
{
 if(player_obj.user_int3 == 5)
 {
  game_obj.user_int = random(map_columns - 1);
  game_obj.user_int2 = random(map_rows - 1);
  player_obj.user_int4 = game_obj.user_int; player_obj.user_int5 = game_obj.user_int2; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int];
  player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; }
  print("VERBOSE: " + "Initial Player Location: (" + game_obj.user_int + ", " + game_obj.user_int2);
 }
 if(player_obj.user_int3 == 7)
 {
  if(player_obj.user_int3 != 7) { print("VERBOSE: " + "PERFORM_HIT on " + player_obj.user_int); game_object_macro_temp.user_int = game_object_vulnerable[player_obj.user_int]; if(game_object_macro_temp.user_int) { game_object_macro_temp.user_int = game_object_hp[player_obj.user_int]; game_object_macro_temp.user_int -= 1; game_object_hp[player_obj.user_int] = (game_object_macro_temp.user_int); if((game_object_macro_temp.user_int) > game_object_max_hp[player_obj.user_int]) { game_object_hp[player_obj.user_int] = game_object_max_hp[player_obj.user_int]; } player_obj.user_int3 = 7; if(7 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(7 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(7 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(7 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(7 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(7 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(7 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(7 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } } else { game_object_macro_temp.user_double = game_object_start_tick[player_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[player_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[player_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[player_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { game_object_macro_temp.user_int = game_object_hp[player_obj.user_int]; if(game_object_macro_temp.user_int > 0) { game_object_macro_temp.user_int = random(map_columns -2) + 1; game_object_macro_temp.user_int2 = random(map_rows -2) + 1; player_obj.user_int4 = game_object_macro_temp.user_int; player_obj.user_int5 = game_object_macro_temp.user_int2; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } else { if(player_obj.user_int3 != 8) { player_obj.user_int3 = 8; if(8 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(8 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(8 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(8 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(8 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(8 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(8 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(8 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[player_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[player_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[player_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[player_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { if(game_object_count == 0 || free_object_count == max_object_count) { print("ERROR: " + "DESTROY_GAME_OBJECT: No Game Objects have yet been allocated."); exit(1); } else if(game_objects[player_obj.user_int].user_int2 == 0) { print("ERROR: " + "DESTROY_GAME_OBJECT: Object Not Allocated"); exit(1); } game_object_count -= 1; free_object_id[free_object_count] = player_obj.user_int; free_object_count += 1; game_objects[player_obj.user_int].x = -1; game_objects[player_obj.user_int].y = -1; game_objects[player_obj.user_int].user_string = "null"; game_objects[player_obj.user_int].user_int2 = 0; game_objects[player_obj.user_int].animation_block = NullAnimation; } } } } }
 }
 else if(player_obj.user_int3 == 8)
 {
  game_object_direction[player_id] = 1;
  game_object_macro_temp.user_double = game_object_start_tick[player_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[player_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[player_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[player_obj.user_int]);
  if(game_object_macro_temp.user_double < 1.0)
  {
   if(player_obj.user_int3 != 8) { player_obj.user_int3 = 8; if(8 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(8 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(8 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(8 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(8 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(8 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(8 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(8 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[player_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[player_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[player_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[player_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { if(game_object_count == 0 || free_object_count == max_object_count) { print("ERROR: " + "DESTROY_GAME_OBJECT: No Game Objects have yet been allocated."); exit(1); } else if(game_objects[player_obj.user_int].user_int2 == 0) { print("ERROR: " + "DESTROY_GAME_OBJECT: Object Not Allocated"); exit(1); } game_object_count -= 1; free_object_id[free_object_count] = player_obj.user_int; free_object_count += 1; game_objects[player_obj.user_int].x = -1; game_objects[player_obj.user_int].y = -1; game_objects[player_obj.user_int].user_string = "null"; game_objects[player_obj.user_int].user_int2 = 0; game_objects[player_obj.user_int].animation_block = NullAnimation; } }
  }
  else
  {
   print("VERBOSE: " + "REVIVE PLAYER!");
   game_object_macro_temp.user_int = game_object_max_hp[player_obj.user_int];
   game_object_hp[player_obj.user_int] = (game_object_macro_temp.user_int); if((game_object_macro_temp.user_int) > game_object_max_hp[player_obj.user_int]) { game_object_hp[player_obj.user_int] = game_object_max_hp[player_obj.user_int]; }
   game_object_macro_temp.user_int = random(map_columns -1) + 1;
   game_object_macro_temp.user_int2 = random(map_rows -1) + 1;
   player_obj.user_int4 = game_object_macro_temp.user_int; player_obj.user_int5 = game_object_macro_temp.user_int2; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int];
   player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; }
  }
 }
 else if(player_obj.user_int3 == 1)
 {
  if(player_obj.user_int5 < map_rows - 1 && tile_walkable[(player_obj.user_int4) + (player_obj.user_int5+1) * map_columns])
  {
   if(player_obj.user_int3 != 1) { player_obj.user_int3 = 1; if(1 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(1 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(1 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(1 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(1 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(1 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(1 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(1 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[player_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[player_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[player_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[player_obj.user_int]); game_object_macro_temp.user_int = player_obj.user_int5; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_height; player_obj.y = game_object_macro_temp.user_int + floor(map_tile_height * game_object_macro_temp.user_double); player_obj.y += game_object_offset_y[player_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { player_obj.user_int5 += 1; player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } }
  }
  else
  {
   player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; }
  }
  if(game_object_direction[player_obj.user_int] != 0)
  {
   print("ERROR: " + "Character Direction Not UP after MOVE_UP");
  }
 }
 else if(player_obj.user_int3 == 2)
 {
  if(player_obj.user_int5 > 0 && tile_walkable[(player_obj.user_int4) + (player_obj.user_int5-1) * map_columns])
  {
   if(player_obj.user_int3 != 2) { player_obj.user_int3 = 2; if(2 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(2 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(2 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(2 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(2 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(2 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(2 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(2 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[player_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[player_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[player_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[player_obj.user_int]); game_object_macro_temp.user_int = player_obj.user_int5; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_height; player_obj.y = game_object_macro_temp.user_int - floor(map_tile_height * game_object_macro_temp.user_double); player_obj.y += game_object_offset_y[player_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { player_obj.user_int5 -= 1; player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } }
  }
  else
  {
   player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; }
  }
  if(game_object_direction[player_obj.user_int] != 1)
  {
   print("ERROR: " + "Character Direction Not DOWN after MOVE_DOWN");
  }
 }
 else if(player_obj.user_int3 == 3)
 {
  game_object_macro_temp.user_int = tile_walkable[(player_obj.user_int4 - 1) + (player_obj.user_int5) * map_columns];
  if(player_obj.user_int4 > 0 && game_object_macro_temp.user_int)
  {
   if(player_obj.user_int3 != 3) { player_obj.user_int3 = 3; if(3 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(3 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(3 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(3 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(3 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(3 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(3 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(3 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[player_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[player_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[player_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[player_obj.user_int]); game_object_macro_temp.user_int = player_obj.user_int4; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_width - map_tile_width; player_obj.x = game_object_macro_temp.user_int - floor(map_tile_width * game_object_macro_temp.user_double); player_obj.x += game_object_offset_x[player_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { player_obj.user_int4 -= 1; player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } }
  }
  else
  {
   if(!game_object_macro_temp.user_int)
   {
    print("Left Boundary Hit (" + (player_obj.user_int4 - 1) + ", " + player_obj.user_int5 + ")");
   }
   player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; }
  }
  if(game_object_direction[player_obj.user_int] != 2)
  {
   print("ERROR: " + "Character Direction Not LEFT after MOVE_LEFT");
  }
 }
 else if(player_obj.user_int3 == 4)
 {
  game_object_macro_temp.user_int = tile_walkable[(player_obj.user_int4 + 1) + (player_obj.user_int5) * map_columns];
  if(player_obj.user_int4 < (map_rows - 1) && game_object_macro_temp.user_int)
  {
   if(player_obj.user_int3 != 4) { player_obj.user_int3 = 4; if(4 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(4 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(4 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(4 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(4 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(4 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(4 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(4 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[player_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[player_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[player_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[player_obj.user_int]); game_object_macro_temp.user_int = player_obj.user_int4; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_width - map_tile_width; player_obj.x = game_object_macro_temp.user_int + floor(map_tile_width * game_object_macro_temp.user_double); player_obj.x += game_object_offset_x[player_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { player_obj.user_int4 += 1; player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } } }
  }
  else
  {
   if(!game_object_macro_temp.user_int)
   {
    print("Right Boundary Hit (" + (player_obj.user_int4 + 1) + ", " + player_obj.user_int5 + ")");
    print("Player Location: (" + player_obj.user_int4 + ", " + player_obj.user_int5 + ")");
   }
   player_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[player_obj.user_int] = 1; player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; if(true) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[player_obj.user_int] = 0; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 2) { game_object_direction[player_obj.user_int] = 1; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 3) { game_object_direction[player_obj.user_int] = 2; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 4) { game_object_direction[player_obj.user_int] = 3; game_object_frame_count[player_obj.user_int] = game_object_move_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 6) { game_object_frame_count[player_obj.user_int] = game_object_attack_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; } else if(0 == 7) { player_obj.x = player_obj.user_int4 * map_tile_width - map_tile_width; player_obj.y = player_obj.user_int5 * map_tile_height; player_obj.x += game_object_offset_x[player_obj.user_int]; player_obj.y += game_object_offset_y[player_obj.user_int]; game_object_frame_count[player_obj.user_int] = game_object_hit_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(false) { game_object_vulnerable[player_obj.user_int] = 1; } else { game_object_vulnerable[player_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[player_obj.user_int] = game_object_die_frame_count[player_obj.user_int]; game_object_start_tick[player_obj.user_int] = tick_count; game_object_end_tick[player_obj.user_int] = tick_count + game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; if(game_object_end_tick[player_obj.user_int] > max_tick_count) { game_object_end_tick[player_obj.user_int] -= max_tick_count; } game_object_duration[player_obj.user_int] = game_object_frame_count[player_obj.user_int] * game_object_frame_rate[player_obj.user_int]; }
  }
  if(game_object_direction[player_obj.user_int] != 3)
  {
   print("ERROR: " + "Character Direction Not RIGHT after MOVE_RIGHT");
  }
 }
 else if(player_obj.user_int3 == 6)
 {
  if(game_objects[player_id].user_int3 != 6) { game_objects[player_id].user_int3 = 6; if(6 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(6 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(6 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(6 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(6 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(6 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(6 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(6 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } game_obj.user_double = game_object_start_tick[game_objects[player_id].user_int]; if(game_obj.user_double > tick_count) { game_obj.user_double -= max_tick_count; } game_obj.user_double = tick_count - game_obj.user_double; if(game_obj.user_double > game_object_duration[game_objects[player_id].user_int]) { game_obj.user_double = game_object_duration[game_objects[player_id].user_int]; } game_obj.user_double = (game_obj.user_double * 1.0) / (1.0 * game_object_duration[game_objects[player_id].user_int]); if(game_obj.user_double == 1.0) { game_objects[player_id].user_int3 = 0; if(0 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } }
 }
 game_object_macro_temp.user_string = player_obj.user_string; if(player_obj.user_int3 == 1 || player_obj.user_int3 == 2 || player_obj.user_int3 == 3 || player_obj.user_int3 == 4) { game_object_macro_temp.user_string += "_walk"; } else if(player_obj.user_int3 == 6) { game_object_macro_temp.user_string += "_attack"; } else if(player_obj.user_int3 == 7) { game_object_macro_temp.user_string += "_hit"; } else if(player_obj.user_int3 == 8) { game_object_macro_temp.user_string += "_die"; } else if(player_obj.user_int3 == 0) { game_object_macro_temp.user_string += "_" + "default"; } else { print("ERROR: " + "UPDATE_SPRITE - Unrecognized State: " + player_obj.user_int3); exit(1); } game_object_macro_temp.user_int = game_object_direction[player_obj.user_int]; if(game_object_macro_temp.user_int == 0) { game_object_macro_temp.user_string += "_up"; } else if(game_object_macro_temp.user_int == 1) { game_object_macro_temp.user_string += "_down"; } else if(game_object_macro_temp.user_int == 2) { game_object_macro_temp.user_string += "_left"; } else if(game_object_macro_temp.user_int == 3) { game_object_macro_temp.user_string += "_right"; } else { print("ERROR: " + "UPDATE_SPRITE - Unrecognized Direction: " + game_obj.user_int); exit(1); } game_object_macro_temp.user_int2 = game_object_frame_count[player_obj.user_int]; game_object_macro_temp.user_double = game_object_start_tick[player_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[player_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[player_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[player_obj.user_int]); game_object_macro_temp.user_string += "_" + floor(game_object_macro_temp.user_double * (game_object_macro_temp.user_int2 - 1)); player_obj.filename = game_object_macro_temp.user_string + ".bmp";
}
animation HeartAnimation(pixmap heart_obj)
{
 if(heart_obj.user_int3 == 5)
 {
  heart_obj.x = heart_obj.user_int4 * map_tile_width - map_tile_width;
  heart_obj.y = heart_obj.user_int5 * map_tile_height;
  heart_obj.filename = "heart_full.bmp";
  heart_obj.user_int3 = 0;
 }
 else if(heart_obj.user_int3 == 0)
 {
  if(game_object_hp[player_id] > (heart_obj.user_int - heart_id[0]))
  {
   heart_obj.filename = "heart_full.bmp";
  }
  else
  {
   heart_obj.filename = "heart_empty.bmp";
  }
 }
}
on space
{
 flag_spacebar = 1;
 if(game_objects[player_id].user_int3 == 0)
 {
  if(game_objects[player_id].user_int3 != 6) { game_objects[player_id].user_int3 = 6; if(6 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(6 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(6 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(6 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(6 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(6 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(6 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(6 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } game_obj.user_double = game_object_start_tick[game_objects[player_id].user_int]; if(game_obj.user_double > tick_count) { game_obj.user_double -= max_tick_count; } game_obj.user_double = tick_count - game_obj.user_double; if(game_obj.user_double > game_object_duration[game_objects[player_id].user_int]) { game_obj.user_double = game_object_duration[game_objects[player_id].user_int]; } game_obj.user_double = (game_obj.user_double * 1.0) / (1.0 * game_object_duration[game_objects[player_id].user_int]); if(game_obj.user_double == 1.0) { game_objects[player_id].user_int3 = 0; if(0 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } }
 }
}
on leftarrow
{
 flag_leftarrow = 1;
 if(game_objects[player_id].user_int3 == 0)
 {
  if(game_object_direction[player_id] == 2)
  {
   if(game_objects[player_id].user_int3 != 3) { game_objects[player_id].user_int3 = 3; if(3 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(3 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(3 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(3 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(3 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(3 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(3 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(3 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[game_objects[player_id].user_int]) { game_object_macro_temp.user_double = game_object_duration[game_objects[player_id].user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[game_objects[player_id].user_int]); game_object_macro_temp.user_int = game_objects[player_id].user_int4; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_width - map_tile_width; game_objects[player_id].x = game_object_macro_temp.user_int - floor(map_tile_width * game_object_macro_temp.user_double); game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double >= 1.0) { game_objects[player_id].user_int4 -= 1; game_objects[player_id].user_int3 = 0; if(0 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } }
  }
  else
  {
   game_object_direction[player_id] = 2;
  }
 }
}
on rightarrow
{
 flag_rightarrow = 1;
 if(game_objects[player_id].user_int3 == 0)
 {
  if(game_object_direction[player_id] == 3)
  {
   if(game_objects[player_id].user_int3 != 4) { game_objects[player_id].user_int3 = 4; if(4 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(4 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(4 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(4 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(4 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(4 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(4 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(4 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[game_objects[player_id].user_int]) { game_object_macro_temp.user_double = game_object_duration[game_objects[player_id].user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[game_objects[player_id].user_int]); game_object_macro_temp.user_int = game_objects[player_id].user_int4; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_width - map_tile_width; game_objects[player_id].x = game_object_macro_temp.user_int + floor(map_tile_width * game_object_macro_temp.user_double); game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double >= 1.0) { game_objects[player_id].user_int4 += 1; game_objects[player_id].user_int3 = 0; if(0 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } }
  }
  else
  {
   game_object_direction[player_id] = 3;
  }
 }
}
on uparrow
{
 flag_uparrow = 1;
 if(game_objects[player_id].user_int3 == 0)
 {
  if(game_object_direction[player_id] == 0)
  {
   if(game_objects[player_id].user_int3 != 1) { game_objects[player_id].user_int3 = 1; if(1 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(1 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(1 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(1 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(1 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(1 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(1 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(1 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[game_objects[player_id].user_int]) { game_object_macro_temp.user_double = game_object_duration[game_objects[player_id].user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[game_objects[player_id].user_int]); game_object_macro_temp.user_int = game_objects[player_id].user_int5; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_height; game_objects[player_id].y = game_object_macro_temp.user_int + floor(map_tile_height * game_object_macro_temp.user_double); game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double >= 1.0) { game_objects[player_id].user_int5 += 1; game_objects[player_id].user_int3 = 0; if(0 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } }
  }
  else
  {
   game_object_direction[player_id] = 0;
  }
 }
}
on downarrow
{
 flag_downarrow = 1;
 if(game_objects[player_id].user_int3 == 0)
 {
  if(game_object_direction[player_id] == 1)
  {
   if(game_objects[player_id].user_int3 != 2) { game_objects[player_id].user_int3 = 2; if(2 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(2 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(2 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(2 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(2 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(2 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(2 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(2 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[game_objects[player_id].user_int]) { game_object_macro_temp.user_double = game_object_duration[game_objects[player_id].user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[game_objects[player_id].user_int]); game_object_macro_temp.user_int = game_objects[player_id].user_int5; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_height; game_objects[player_id].y = game_object_macro_temp.user_int - floor(map_tile_height * game_object_macro_temp.user_double); game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double >= 1.0) { game_objects[player_id].user_int5 -= 1; game_objects[player_id].user_int3 = 0; if(0 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } }
  }
  else
  {
   game_object_direction[player_id] = 1;
  }
 }
}
animation SlendermanAnimation(pixmap slenderman_obj)
{
 game_object_macro_temp.user_int = game_object_vulnerable[slenderman_obj.user_int];
 game_object_macro_temp.user_int2 = game_object_vulnerable[slenderman_obj.user_int];
 if(slenderman_obj touches game_objects[player_id] && game_object_macro_temp.user_int || game_object_macro_temp.user_int2 && game_objects[player_id].user_int3 != 7 && slenderman_obj.user_int3 != 7)
 {
  if(slenderman_obj.user_int4 == game_objects[player_id].user_int4 && slenderman_obj.user_int5 == game_objects[player_id].user_int5 && game_object_macro_temp.user_int2)
  {
   if(game_objects[player_id].user_int3 != 7) { print("VERBOSE: " + "PERFORM_HIT on " + game_objects[player_id].user_int); game_object_macro_temp.user_int = game_object_vulnerable[game_objects[player_id].user_int]; if(game_object_macro_temp.user_int) { game_object_macro_temp.user_int = game_object_hp[game_objects[player_id].user_int]; game_object_macro_temp.user_int -= 1; game_object_hp[game_objects[player_id].user_int] = (game_object_macro_temp.user_int); if((game_object_macro_temp.user_int) > game_object_max_hp[game_objects[player_id].user_int]) { game_object_hp[game_objects[player_id].user_int] = game_object_max_hp[game_objects[player_id].user_int]; } game_objects[player_id].user_int3 = 7; if(7 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(7 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(7 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(7 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(7 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(7 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(7 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(7 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } } else { game_object_macro_temp.user_double = game_object_start_tick[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[game_objects[player_id].user_int]) { game_object_macro_temp.user_double = game_object_duration[game_objects[player_id].user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[game_objects[player_id].user_int]); if(game_object_macro_temp.user_double >= 1.0) { game_object_macro_temp.user_int = game_object_hp[game_objects[player_id].user_int]; if(game_object_macro_temp.user_int > 0) { game_object_macro_temp.user_int = random(map_columns -2) + 1; game_object_macro_temp.user_int2 = random(map_rows -2) + 1; game_objects[player_id].user_int4 = game_object_macro_temp.user_int; game_objects[player_id].user_int5 = game_object_macro_temp.user_int2; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_objects[player_id].user_int3 = 0; if(0 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } else { if(game_objects[player_id].user_int3 != 8) { game_objects[player_id].user_int3 = 8; if(8 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(8 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(8 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(8 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(8 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(8 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(8 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(8 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[game_objects[player_id].user_int]) { game_object_macro_temp.user_double = game_object_duration[game_objects[player_id].user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[game_objects[player_id].user_int]); if(game_object_macro_temp.user_double >= 1.0) { if(game_object_count == 0 || free_object_count == max_object_count) { print("ERROR: " + "DESTROY_GAME_OBJECT: No Game Objects have yet been allocated."); exit(1); } else if(game_objects[game_objects[player_id].user_int].user_int2 == 0) { print("ERROR: " + "DESTROY_GAME_OBJECT: Object Not Allocated"); exit(1); } game_object_count -= 1; free_object_id[free_object_count] = game_objects[player_id].user_int; free_object_count += 1; game_objects[game_objects[player_id].user_int].x = -1; game_objects[game_objects[player_id].user_int].y = -1; game_objects[game_objects[player_id].user_int].user_string = "null"; game_objects[game_objects[player_id].user_int].user_int2 = 0; game_objects[game_objects[player_id].user_int].animation_block = NullAnimation; } } } } }
  }
  else if(game_objects[player_id].user_int3 == 6 && game_object_macro_temp.user_int)
  {
   if(game_object_direction[player_id] == 0 && slenderman_obj.user_int5 > game_objects[player_id].user_int5)
   {
    if(slenderman_obj.user_int3 != 7) { print("VERBOSE: " + "PERFORM_HIT on " + slenderman_obj.user_int); game_object_macro_temp.user_int = game_object_vulnerable[slenderman_obj.user_int]; if(game_object_macro_temp.user_int) { game_object_macro_temp.user_int = game_object_hp[slenderman_obj.user_int]; game_object_macro_temp.user_int -= 1; game_object_hp[slenderman_obj.user_int] = (game_object_macro_temp.user_int); if((game_object_macro_temp.user_int) > game_object_max_hp[slenderman_obj.user_int]) { game_object_hp[slenderman_obj.user_int] = game_object_max_hp[slenderman_obj.user_int]; } slenderman_obj.user_int3 = 7; if(7 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(7 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(7 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { game_object_macro_temp.user_int = game_object_hp[slenderman_obj.user_int]; if(game_object_macro_temp.user_int > 0) { game_object_macro_temp.user_int = random(map_columns -2) + 1; game_object_macro_temp.user_int2 = random(map_rows -2) + 1; slenderman_obj.user_int4 = game_object_macro_temp.user_int; slenderman_obj.user_int5 = game_object_macro_temp.user_int2; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { if(slenderman_obj.user_int3 != 8) { slenderman_obj.user_int3 = 8; if(8 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { if(game_object_count == 0 || free_object_count == max_object_count) { print("ERROR: " + "DESTROY_GAME_OBJECT: No Game Objects have yet been allocated."); exit(1); } else if(game_objects[slenderman_obj.user_int].user_int2 == 0) { print("ERROR: " + "DESTROY_GAME_OBJECT: Object Not Allocated"); exit(1); } game_object_count -= 1; free_object_id[free_object_count] = slenderman_obj.user_int; free_object_count += 1; game_objects[slenderman_obj.user_int].x = -1; game_objects[slenderman_obj.user_int].y = -1; game_objects[slenderman_obj.user_int].user_string = "null"; game_objects[slenderman_obj.user_int].user_int2 = 0; game_objects[slenderman_obj.user_int].animation_block = NullAnimation; } } } } }
   }
   else if(game_object_direction[player_id] == 2 && slenderman_obj.user_int4 < game_objects[player_id].user_int4)
   {
    if(slenderman_obj.user_int3 != 7) { print("VERBOSE: " + "PERFORM_HIT on " + slenderman_obj.user_int); game_object_macro_temp.user_int = game_object_vulnerable[slenderman_obj.user_int]; if(game_object_macro_temp.user_int) { game_object_macro_temp.user_int = game_object_hp[slenderman_obj.user_int]; game_object_macro_temp.user_int -= 1; game_object_hp[slenderman_obj.user_int] = (game_object_macro_temp.user_int); if((game_object_macro_temp.user_int) > game_object_max_hp[slenderman_obj.user_int]) { game_object_hp[slenderman_obj.user_int] = game_object_max_hp[slenderman_obj.user_int]; } slenderman_obj.user_int3 = 7; if(7 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(7 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(7 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { game_object_macro_temp.user_int = game_object_hp[slenderman_obj.user_int]; if(game_object_macro_temp.user_int > 0) { game_object_macro_temp.user_int = random(map_columns -2) + 1; game_object_macro_temp.user_int2 = random(map_rows -2) + 1; slenderman_obj.user_int4 = game_object_macro_temp.user_int; slenderman_obj.user_int5 = game_object_macro_temp.user_int2; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { if(slenderman_obj.user_int3 != 8) { slenderman_obj.user_int3 = 8; if(8 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { if(game_object_count == 0 || free_object_count == max_object_count) { print("ERROR: " + "DESTROY_GAME_OBJECT: No Game Objects have yet been allocated."); exit(1); } else if(game_objects[slenderman_obj.user_int].user_int2 == 0) { print("ERROR: " + "DESTROY_GAME_OBJECT: Object Not Allocated"); exit(1); } game_object_count -= 1; free_object_id[free_object_count] = slenderman_obj.user_int; free_object_count += 1; game_objects[slenderman_obj.user_int].x = -1; game_objects[slenderman_obj.user_int].y = -1; game_objects[slenderman_obj.user_int].user_string = "null"; game_objects[slenderman_obj.user_int].user_int2 = 0; game_objects[slenderman_obj.user_int].animation_block = NullAnimation; } } } } }
   }
   else if(game_object_direction[player_id] == 1 && slenderman_obj.user_int5 < game_objects[player_id].user_int5)
   {
    if(slenderman_obj.user_int3 != 7) { print("VERBOSE: " + "PERFORM_HIT on " + slenderman_obj.user_int); game_object_macro_temp.user_int = game_object_vulnerable[slenderman_obj.user_int]; if(game_object_macro_temp.user_int) { game_object_macro_temp.user_int = game_object_hp[slenderman_obj.user_int]; game_object_macro_temp.user_int -= 1; game_object_hp[slenderman_obj.user_int] = (game_object_macro_temp.user_int); if((game_object_macro_temp.user_int) > game_object_max_hp[slenderman_obj.user_int]) { game_object_hp[slenderman_obj.user_int] = game_object_max_hp[slenderman_obj.user_int]; } slenderman_obj.user_int3 = 7; if(7 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(7 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(7 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { game_object_macro_temp.user_int = game_object_hp[slenderman_obj.user_int]; if(game_object_macro_temp.user_int > 0) { game_object_macro_temp.user_int = random(map_columns -2) + 1; game_object_macro_temp.user_int2 = random(map_rows -2) + 1; slenderman_obj.user_int4 = game_object_macro_temp.user_int; slenderman_obj.user_int5 = game_object_macro_temp.user_int2; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { if(slenderman_obj.user_int3 != 8) { slenderman_obj.user_int3 = 8; if(8 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { if(game_object_count == 0 || free_object_count == max_object_count) { print("ERROR: " + "DESTROY_GAME_OBJECT: No Game Objects have yet been allocated."); exit(1); } else if(game_objects[slenderman_obj.user_int].user_int2 == 0) { print("ERROR: " + "DESTROY_GAME_OBJECT: Object Not Allocated"); exit(1); } game_object_count -= 1; free_object_id[free_object_count] = slenderman_obj.user_int; free_object_count += 1; game_objects[slenderman_obj.user_int].x = -1; game_objects[slenderman_obj.user_int].y = -1; game_objects[slenderman_obj.user_int].user_string = "null"; game_objects[slenderman_obj.user_int].user_int2 = 0; game_objects[slenderman_obj.user_int].animation_block = NullAnimation; } } } } }
   }
   else if(game_object_direction[player_id] == 3 && slenderman_obj.user_int4 > game_objects[player_id].user_int4)
   {
    if(slenderman_obj.user_int3 != 7) { print("VERBOSE: " + "PERFORM_HIT on " + slenderman_obj.user_int); game_object_macro_temp.user_int = game_object_vulnerable[slenderman_obj.user_int]; if(game_object_macro_temp.user_int) { game_object_macro_temp.user_int = game_object_hp[slenderman_obj.user_int]; game_object_macro_temp.user_int -= 1; game_object_hp[slenderman_obj.user_int] = (game_object_macro_temp.user_int); if((game_object_macro_temp.user_int) > game_object_max_hp[slenderman_obj.user_int]) { game_object_hp[slenderman_obj.user_int] = game_object_max_hp[slenderman_obj.user_int]; } slenderman_obj.user_int3 = 7; if(7 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(7 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(7 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { game_object_macro_temp.user_int = game_object_hp[slenderman_obj.user_int]; if(game_object_macro_temp.user_int > 0) { game_object_macro_temp.user_int = random(map_columns -2) + 1; game_object_macro_temp.user_int2 = random(map_rows -2) + 1; slenderman_obj.user_int4 = game_object_macro_temp.user_int; slenderman_obj.user_int5 = game_object_macro_temp.user_int2; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { if(slenderman_obj.user_int3 != 8) { slenderman_obj.user_int3 = 8; if(8 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { if(game_object_count == 0 || free_object_count == max_object_count) { print("ERROR: " + "DESTROY_GAME_OBJECT: No Game Objects have yet been allocated."); exit(1); } else if(game_objects[slenderman_obj.user_int].user_int2 == 0) { print("ERROR: " + "DESTROY_GAME_OBJECT: Object Not Allocated"); exit(1); } game_object_count -= 1; free_object_id[free_object_count] = slenderman_obj.user_int; free_object_count += 1; game_objects[slenderman_obj.user_int].x = -1; game_objects[slenderman_obj.user_int].y = -1; game_objects[slenderman_obj.user_int].user_string = "null"; game_objects[slenderman_obj.user_int].user_int2 = 0; game_objects[slenderman_obj.user_int].animation_block = NullAnimation; } } } } }
   }
   else if(game_object_macro_temp.user_int2)
   {
    if(game_objects[player_id].user_int3 != 7) { print("VERBOSE: " + "PERFORM_HIT on " + game_objects[player_id].user_int); game_object_macro_temp.user_int = game_object_vulnerable[game_objects[player_id].user_int]; if(game_object_macro_temp.user_int) { game_object_macro_temp.user_int = game_object_hp[game_objects[player_id].user_int]; game_object_macro_temp.user_int -= 1; game_object_hp[game_objects[player_id].user_int] = (game_object_macro_temp.user_int); if((game_object_macro_temp.user_int) > game_object_max_hp[game_objects[player_id].user_int]) { game_object_hp[game_objects[player_id].user_int] = game_object_max_hp[game_objects[player_id].user_int]; } game_objects[player_id].user_int3 = 7; if(7 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(7 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(7 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(7 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(7 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(7 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(7 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(7 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } } else { game_object_macro_temp.user_double = game_object_start_tick[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[game_objects[player_id].user_int]) { game_object_macro_temp.user_double = game_object_duration[game_objects[player_id].user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[game_objects[player_id].user_int]); if(game_object_macro_temp.user_double >= 1.0) { game_object_macro_temp.user_int = game_object_hp[game_objects[player_id].user_int]; if(game_object_macro_temp.user_int > 0) { game_object_macro_temp.user_int = random(map_columns -2) + 1; game_object_macro_temp.user_int2 = random(map_rows -2) + 1; game_objects[player_id].user_int4 = game_object_macro_temp.user_int; game_objects[player_id].user_int5 = game_object_macro_temp.user_int2; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_objects[player_id].user_int3 = 0; if(0 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(0 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(0 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } else { if(game_objects[player_id].user_int3 != 8) { game_objects[player_id].user_int3 = 8; if(8 == 0) { game_object_frame_count[game_objects[player_id].user_int] = 1; game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; if(true) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(8 == 1) { game_object_direction[game_objects[player_id].user_int] = 0; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(8 == 2) { game_object_direction[game_objects[player_id].user_int] = 1; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(8 == 3) { game_object_direction[game_objects[player_id].user_int] = 2; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(8 == 4) { game_object_direction[game_objects[player_id].user_int] = 3; game_object_frame_count[game_objects[player_id].user_int] = game_object_move_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(8 == 6) { game_object_frame_count[game_objects[player_id].user_int] = game_object_attack_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } else if(8 == 7) { game_objects[player_id].x = game_objects[player_id].user_int4 * map_tile_width - map_tile_width; game_objects[player_id].y = game_objects[player_id].user_int5 * map_tile_height; game_objects[player_id].x += game_object_offset_x[game_objects[player_id].user_int]; game_objects[player_id].y += game_object_offset_y[game_objects[player_id].user_int]; game_object_frame_count[game_objects[player_id].user_int] = game_object_hit_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(false) { game_object_vulnerable[game_objects[player_id].user_int] = 1; } else { game_object_vulnerable[game_objects[player_id].user_int] = 0; } } else if(8 == 8) { game_object_frame_count[game_objects[player_id].user_int] = game_object_die_frame_count[game_objects[player_id].user_int]; game_object_start_tick[game_objects[player_id].user_int] = tick_count; game_object_end_tick[game_objects[player_id].user_int] = tick_count + game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; if(game_object_end_tick[game_objects[player_id].user_int] > max_tick_count) { game_object_end_tick[game_objects[player_id].user_int] -= max_tick_count; } game_object_duration[game_objects[player_id].user_int] = game_object_frame_count[game_objects[player_id].user_int] * game_object_frame_rate[game_objects[player_id].user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[game_objects[player_id].user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[game_objects[player_id].user_int]) { game_object_macro_temp.user_double = game_object_duration[game_objects[player_id].user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[game_objects[player_id].user_int]); if(game_object_macro_temp.user_double >= 1.0) { if(game_object_count == 0 || free_object_count == max_object_count) { print("ERROR: " + "DESTROY_GAME_OBJECT: No Game Objects have yet been allocated."); exit(1); } else if(game_objects[game_objects[player_id].user_int].user_int2 == 0) { print("ERROR: " + "DESTROY_GAME_OBJECT: Object Not Allocated"); exit(1); } game_object_count -= 1; free_object_id[free_object_count] = game_objects[player_id].user_int; free_object_count += 1; game_objects[game_objects[player_id].user_int].x = -1; game_objects[game_objects[player_id].user_int].y = -1; game_objects[game_objects[player_id].user_int].user_string = "null"; game_objects[game_objects[player_id].user_int].user_int2 = 0; game_objects[game_objects[player_id].user_int].animation_block = NullAnimation; } } } } }
   }
  }
 }
 if(slenderman_obj.user_int3 == 1)
 {
  if(slenderman_obj.user_int3 != 1) { slenderman_obj.user_int3 = 1; if(1 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(1 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(1 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(1 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(1 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(1 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(1 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(1 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); game_object_macro_temp.user_int = slenderman_obj.user_int5; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_height; slenderman_obj.y = game_object_macro_temp.user_int + floor(map_tile_height * game_object_macro_temp.user_double); slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { slenderman_obj.user_int5 += 1; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } }
 }
 else if(slenderman_obj.user_int3 == 2)
 {
  if(slenderman_obj.user_int3 != 2) { slenderman_obj.user_int3 = 2; if(2 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(2 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(2 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(2 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(2 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(2 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(2 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(2 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); game_object_macro_temp.user_int = slenderman_obj.user_int5; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_height; slenderman_obj.y = game_object_macro_temp.user_int - floor(map_tile_height * game_object_macro_temp.user_double); slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { slenderman_obj.user_int5 -= 1; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } }
 }
 else if(slenderman_obj.user_int3 == 3)
 {
  if(slenderman_obj.user_int3 != 3) { slenderman_obj.user_int3 = 3; if(3 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(3 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(3 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(3 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(3 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(3 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(3 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(3 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); game_object_macro_temp.user_int = slenderman_obj.user_int4; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_width - map_tile_width; slenderman_obj.x = game_object_macro_temp.user_int - floor(map_tile_width * game_object_macro_temp.user_double); slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { slenderman_obj.user_int4 -= 1; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } }
 }
 else if(slenderman_obj.user_int3 == 4)
 {
  if(slenderman_obj.user_int3 != 4) { slenderman_obj.user_int3 = 4; if(4 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(4 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(4 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(4 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(4 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(4 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(4 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(4 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); game_object_macro_temp.user_int = slenderman_obj.user_int4; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_width - map_tile_width; slenderman_obj.x = game_object_macro_temp.user_int + floor(map_tile_width * game_object_macro_temp.user_double); slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { slenderman_obj.user_int4 += 1; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } }
 }
 else if(slenderman_obj.user_int3 == 7)
 {
  if(slenderman_obj.user_int3 != 7) { print("VERBOSE: " + "PERFORM_HIT on " + slenderman_obj.user_int); game_object_macro_temp.user_int = game_object_vulnerable[slenderman_obj.user_int]; if(game_object_macro_temp.user_int) { game_object_macro_temp.user_int = game_object_hp[slenderman_obj.user_int]; game_object_macro_temp.user_int -= 1; game_object_hp[slenderman_obj.user_int] = (game_object_macro_temp.user_int); if((game_object_macro_temp.user_int) > game_object_max_hp[slenderman_obj.user_int]) { game_object_hp[slenderman_obj.user_int] = game_object_max_hp[slenderman_obj.user_int]; } slenderman_obj.user_int3 = 7; if(7 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(7 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(7 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(7 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { game_object_macro_temp.user_int = game_object_hp[slenderman_obj.user_int]; if(game_object_macro_temp.user_int > 0) { game_object_macro_temp.user_int = random(map_columns -2) + 1; game_object_macro_temp.user_int2 = random(map_rows -2) + 1; slenderman_obj.user_int4 = game_object_macro_temp.user_int; slenderman_obj.user_int5 = game_object_macro_temp.user_int2; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { if(slenderman_obj.user_int3 != 8) { slenderman_obj.user_int3 = 8; if(8 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { if(game_object_count == 0 || free_object_count == max_object_count) { print("ERROR: " + "DESTROY_GAME_OBJECT: No Game Objects have yet been allocated."); exit(1); } else if(game_objects[slenderman_obj.user_int].user_int2 == 0) { print("ERROR: " + "DESTROY_GAME_OBJECT: Object Not Allocated"); exit(1); } game_object_count -= 1; free_object_id[free_object_count] = slenderman_obj.user_int; free_object_count += 1; game_objects[slenderman_obj.user_int].x = -1; game_objects[slenderman_obj.user_int].y = -1; game_objects[slenderman_obj.user_int].user_string = "null"; game_objects[slenderman_obj.user_int].user_int2 = 0; game_objects[slenderman_obj.user_int].animation_block = NullAnimation; } } } } }
 }
 else if(slenderman_obj.user_int3 == 8)
 {
  if(slenderman_obj.user_int3 != 8) { slenderman_obj.user_int3 = 8; if(8 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(8 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(8 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); if(game_object_macro_temp.user_double >= 1.0) { if(game_object_count == 0 || free_object_count == max_object_count) { print("ERROR: " + "DESTROY_GAME_OBJECT: No Game Objects have yet been allocated."); exit(1); } else if(game_objects[slenderman_obj.user_int].user_int2 == 0) { print("ERROR: " + "DESTROY_GAME_OBJECT: Object Not Allocated"); exit(1); } game_object_count -= 1; free_object_id[free_object_count] = slenderman_obj.user_int; free_object_count += 1; game_objects[slenderman_obj.user_int].x = -1; game_objects[slenderman_obj.user_int].y = -1; game_objects[slenderman_obj.user_int].user_string = "null"; game_objects[slenderman_obj.user_int].user_int2 = 0; game_objects[slenderman_obj.user_int].animation_block = NullAnimation; } }
 }
 else if(slenderman_obj.user_int3 == 0)
 {
  if(game_objects[player_id].user_int4 > slenderman_obj.user_int4)
  {
   game_obj.user_int = game_objects[player_id].user_int4 - slenderman_obj.user_int4;
   game_obj.user_int3 = 3;
  }
  else
  {
   game_obj.user_int = slenderman_obj.user_int4 - game_objects[player_id].user_int4;
   game_obj.user_int3 = 2;
  }
  if(game_objects[player_id].user_int5 > slenderman_obj.user_int5)
  {
   game_obj.user_int2 = game_objects[player_id].user_int5 - slenderman_obj.user_int5;
   game_obj.user_int4 = 0;
  }
  else
  {
   game_obj.user_int2 = slenderman_obj.user_int5 - game_objects[player_id].user_int5;
   game_obj.user_int4 = 1;
  }
  if(game_obj.user_int >= game_obj.user_int2)
  {
   if(game_obj.user_int3 == 3)
   {
    if(slenderman_obj.user_int3 != 4) { slenderman_obj.user_int3 = 4; if(4 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(4 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(4 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(4 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(4 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(4 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(4 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(4 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); game_object_macro_temp.user_int = slenderman_obj.user_int4; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_width - map_tile_width; slenderman_obj.x = game_object_macro_temp.user_int + floor(map_tile_width * game_object_macro_temp.user_double); slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { slenderman_obj.user_int4 += 1; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } }
   }
   else
   {
    if(slenderman_obj.user_int3 != 3) { slenderman_obj.user_int3 = 3; if(3 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(3 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(3 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(3 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(3 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(3 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(3 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(3 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); game_object_macro_temp.user_int = slenderman_obj.user_int4; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_width - map_tile_width; slenderman_obj.x = game_object_macro_temp.user_int - floor(map_tile_width * game_object_macro_temp.user_double); slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { slenderman_obj.user_int4 -= 1; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } }
   }
  }
  else
  {
   if(game_obj.user_int4 == 0)
   {
    if(slenderman_obj.user_int3 != 1) { slenderman_obj.user_int3 = 1; if(1 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(1 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(1 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(1 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(1 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(1 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(1 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(1 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); game_object_macro_temp.user_int = slenderman_obj.user_int5; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_height; slenderman_obj.y = game_object_macro_temp.user_int + floor(map_tile_height * game_object_macro_temp.user_double); slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { slenderman_obj.user_int5 += 1; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } }
   }
   else
   {
    if(slenderman_obj.user_int3 != 2) { slenderman_obj.user_int3 = 2; if(2 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(2 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(2 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(2 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(2 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(2 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(2 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(2 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } else { game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); game_object_macro_temp.user_int = slenderman_obj.user_int5; game_object_macro_temp.user_int = game_object_macro_temp.user_int * map_tile_height; slenderman_obj.y = game_object_macro_temp.user_int - floor(map_tile_height * game_object_macro_temp.user_double); slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(game_object_macro_temp.user_double >= 1.0) { slenderman_obj.user_int5 -= 1; slenderman_obj.user_int3 = 0; if(0 == 0) { game_object_frame_count[slenderman_obj.user_int] = 1; slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; if(true) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 1) { game_object_direction[slenderman_obj.user_int] = 0; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 2) { game_object_direction[slenderman_obj.user_int] = 1; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 3) { game_object_direction[slenderman_obj.user_int] = 2; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 4) { game_object_direction[slenderman_obj.user_int] = 3; game_object_frame_count[slenderman_obj.user_int] = game_object_move_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 6) { game_object_frame_count[slenderman_obj.user_int] = game_object_attack_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } else if(0 == 7) { slenderman_obj.x = slenderman_obj.user_int4 * map_tile_width - map_tile_width; slenderman_obj.y = slenderman_obj.user_int5 * map_tile_height; slenderman_obj.x += game_object_offset_x[slenderman_obj.user_int]; slenderman_obj.y += game_object_offset_y[slenderman_obj.user_int]; game_object_frame_count[slenderman_obj.user_int] = game_object_hit_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(false) { game_object_vulnerable[slenderman_obj.user_int] = 1; } else { game_object_vulnerable[slenderman_obj.user_int] = 0; } } else if(0 == 8) { game_object_frame_count[slenderman_obj.user_int] = game_object_die_frame_count[slenderman_obj.user_int]; game_object_start_tick[slenderman_obj.user_int] = tick_count; game_object_end_tick[slenderman_obj.user_int] = tick_count + game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; if(game_object_end_tick[slenderman_obj.user_int] > max_tick_count) { game_object_end_tick[slenderman_obj.user_int] -= max_tick_count; } game_object_duration[slenderman_obj.user_int] = game_object_frame_count[slenderman_obj.user_int] * game_object_frame_rate[slenderman_obj.user_int]; } } }
   }
  }
 }
 game_object_macro_temp.user_string = slenderman_obj.user_string; if(slenderman_obj.user_int3 == 1 || slenderman_obj.user_int3 == 2 || slenderman_obj.user_int3 == 3 || slenderman_obj.user_int3 == 4) { game_object_macro_temp.user_string += "_walk"; } else if(slenderman_obj.user_int3 == 6) { game_object_macro_temp.user_string += "_attack"; } else if(slenderman_obj.user_int3 == 7) { game_object_macro_temp.user_string += "_hit"; } else if(slenderman_obj.user_int3 == 8) { game_object_macro_temp.user_string += "_die"; } else if(slenderman_obj.user_int3 == 0) { game_object_macro_temp.user_string += "_" + "default"; } else { print("ERROR: " + "UPDATE_SPRITE - Unrecognized State: " + slenderman_obj.user_int3); exit(1); } game_object_macro_temp.user_int = game_object_direction[slenderman_obj.user_int]; if(game_object_macro_temp.user_int == 0) { game_object_macro_temp.user_string += "_up"; } else if(game_object_macro_temp.user_int == 1) { game_object_macro_temp.user_string += "_down"; } else if(game_object_macro_temp.user_int == 2) { game_object_macro_temp.user_string += "_left"; } else if(game_object_macro_temp.user_int == 3) { game_object_macro_temp.user_string += "_right"; } else { print("ERROR: " + "UPDATE_SPRITE - Unrecognized Direction: " + game_obj.user_int); exit(1); } game_object_macro_temp.user_int2 = game_object_frame_count[slenderman_obj.user_int]; game_object_macro_temp.user_double = game_object_start_tick[slenderman_obj.user_int]; if(game_object_macro_temp.user_double > tick_count) { game_object_macro_temp.user_double -= max_tick_count; } game_object_macro_temp.user_double = tick_count - game_object_macro_temp.user_double; if(game_object_macro_temp.user_double > game_object_duration[slenderman_obj.user_int]) { game_object_macro_temp.user_double = game_object_duration[slenderman_obj.user_int]; } game_object_macro_temp.user_double = (game_object_macro_temp.user_double * 1.0) / (1.0 * game_object_duration[slenderman_obj.user_int]); game_object_macro_temp.user_string += "_" + floor(game_object_macro_temp.user_double * (game_object_macro_temp.user_int2 - 1)); slenderman_obj.filename = game_object_macro_temp.user_string + ".bmp";
}
animation ClockTickAnimation(rectangle clock_obj)
{
 tick_count += 1;
 if(tick_count > max_tick_count) tick_count = 0;
}
animation NullAnimation(pixmap null_obj)
{
}
animation GameAnimation(rectangle game_obj_param)
{
 flag_leftarrow = 0;
 flag_rightarrow = 0;
 flag_uparrow = 0;
 flag_downarrow = 0;
 flag_spacebar = 0;
 if((tick_count - last_spawn_tick > spawn_rate)
  || (last_spawn_tick > tick_count))
 {
  print("VERBOSE: " + "Spawning a new Slenderman");
  if((game_object_count == max_object_count) || (free_object_count == 0)) { print("ERROR: " + "ERROR: The Max Game Object Count Exceeded"); exit(1); } game_object_macro_temp.user_int = free_object_id[free_object_count - 1]; if(game_objects[game_object_macro_temp.user_int].user_int2 != 0) { print("ERROR: " + "ERROR: Object Already Allocated"); exit(1); } print("VERBOSE: " + "CREATE_GAME_OBJECT - NEW ID: " + game_object_macro_temp.user_int); free_object_id[free_object_count - 1] = -1; free_object_count -= 1; game_object_count += 1; game_objects[game_object_macro_temp.user_int].visible = 1; game_objects[game_object_macro_temp.user_int].x = 0; game_objects[game_object_macro_temp.user_int].y = map_tile_height; game_objects[game_object_macro_temp.user_int].user_int = game_object_macro_temp.user_int; game_objects[game_object_macro_temp.user_int].user_int2 = 1; game_objects[game_object_macro_temp.user_int].user_string = "slenderman"; game_objects[game_object_macro_temp.user_int].user_int4 = random(map_columns-1) + 1; game_objects[game_object_macro_temp.user_int].user_int5 = random(map_rows -1) + 1; game_objects[game_object_macro_temp.user_int].drawing_order = 100; game_objects[game_object_macro_temp.user_int].animation_block = SlendermanAnimation; game_object_max_hp[game_object_macro_temp.user_int] = 1; game_object_hp[game_object_macro_temp.user_int] = 1; game_object_vulnerable[game_object_macro_temp.user_int] = 1; game_object_frame_rate[game_object_macro_temp.user_int] = 2; game_object_move_frame_count[game_object_macro_temp.user_int] = 4; game_object_attack_frame_count[game_object_macro_temp.user_int] = 1; game_object_hit_frame_count[game_object_macro_temp.user_int] = 5; game_object_die_frame_count[game_object_macro_temp.user_int] = 5; game_objects[game_object_macro_temp.user_int].user_int3 = 0; if(0 == 0) { game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] = 1; game_objects[game_object_macro_temp.user_int].x = game_objects[game_object_macro_temp.user_int].user_int4 * map_tile_width - map_tile_width; game_objects[game_object_macro_temp.user_int].y = game_objects[game_object_macro_temp.user_int].user_int5 * map_tile_height; game_objects[game_object_macro_temp.user_int].x += game_object_offset_x[game_objects[game_object_macro_temp.user_int].user_int]; game_objects[game_object_macro_temp.user_int].y += game_object_offset_y[game_objects[game_object_macro_temp.user_int].user_int]; if(true) { game_object_vulnerable[game_objects[game_object_macro_temp.user_int].user_int] = 1; } else { game_object_vulnerable[game_objects[game_object_macro_temp.user_int].user_int] = 0; } } else if(0 == 1) { game_object_direction[game_objects[game_object_macro_temp.user_int].user_int] = 0; game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] = game_object_move_frame_count[game_objects[game_object_macro_temp.user_int].user_int]; game_object_start_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count; game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count + game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; if(game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] > max_tick_count) { game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] -= max_tick_count; } game_object_duration[game_objects[game_object_macro_temp.user_int].user_int] = game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; } else if(0 == 2) { game_object_direction[game_objects[game_object_macro_temp.user_int].user_int] = 1; game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] = game_object_move_frame_count[game_objects[game_object_macro_temp.user_int].user_int]; game_object_start_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count; game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count + game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; if(game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] > max_tick_count) { game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] -= max_tick_count; } game_object_duration[game_objects[game_object_macro_temp.user_int].user_int] = game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; } else if(0 == 3) { game_object_direction[game_objects[game_object_macro_temp.user_int].user_int] = 2; game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] = game_object_move_frame_count[game_objects[game_object_macro_temp.user_int].user_int]; game_object_start_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count; game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count + game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; if(game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] > max_tick_count) { game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] -= max_tick_count; } game_object_duration[game_objects[game_object_macro_temp.user_int].user_int] = game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; } else if(0 == 4) { game_object_direction[game_objects[game_object_macro_temp.user_int].user_int] = 3; game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] = game_object_move_frame_count[game_objects[game_object_macro_temp.user_int].user_int]; game_object_start_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count; game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count + game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; if(game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] > max_tick_count) { game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] -= max_tick_count; } game_object_duration[game_objects[game_object_macro_temp.user_int].user_int] = game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; } else if(0 == 6) { game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] = game_object_attack_frame_count[game_objects[game_object_macro_temp.user_int].user_int]; game_object_start_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count; game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count + game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; if(game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] > max_tick_count) { game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] -= max_tick_count; } game_object_duration[game_objects[game_object_macro_temp.user_int].user_int] = game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; } else if(0 == 7) { game_objects[game_object_macro_temp.user_int].x = game_objects[game_object_macro_temp.user_int].user_int4 * map_tile_width - map_tile_width; game_objects[game_object_macro_temp.user_int].y = game_objects[game_object_macro_temp.user_int].user_int5 * map_tile_height; game_objects[game_object_macro_temp.user_int].x += game_object_offset_x[game_objects[game_object_macro_temp.user_int].user_int]; game_objects[game_object_macro_temp.user_int].y += game_object_offset_y[game_objects[game_object_macro_temp.user_int].user_int]; game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] = game_object_hit_frame_count[game_objects[game_object_macro_temp.user_int].user_int]; game_object_start_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count; game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count + game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; if(game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] > max_tick_count) { game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] -= max_tick_count; } game_object_duration[game_objects[game_object_macro_temp.user_int].user_int] = game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; if(false) { game_object_vulnerable[game_objects[game_object_macro_temp.user_int].user_int] = 1; } else { game_object_vulnerable[game_objects[game_object_macro_temp.user_int].user_int] = 0; } } else if(0 == 8) { game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] = game_object_die_frame_count[game_objects[game_object_macro_temp.user_int].user_int]; game_object_start_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count; game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] = tick_count + game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; if(game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] > max_tick_count) { game_object_end_tick[game_objects[game_object_macro_temp.user_int].user_int] -= max_tick_count; } game_object_duration[game_objects[game_object_macro_temp.user_int].user_int] = game_object_frame_count[game_objects[game_object_macro_temp.user_int].user_int] * game_object_frame_rate[game_objects[game_object_macro_temp.user_int].user_int]; }
  last_spawn_tick = tick_count;
 }
}
animation InitGameAnimation(rectangle game_init_obj)
{
 game_init_obj.animation_block = GameAnimation;
 print("VERBOSE: " + "GameInitAnimation: COMPLETE");
}
animation TileAnimation(pixmap tile_obj)
{
 if(tile_obj.user_int3 == 5)
 {
  tile_obj.x = tile_obj.user_int4 * map_tile_width;
  tile_obj.y = tile_obj.user_int5 * map_tile_height;
  game_object_macro_temp.user_int = tile_id[(tile_obj.user_int4) + (tile_obj.user_int5) * map_columns] % 10; game_object_macro_temp.user_int2 = tile_id[(tile_obj.user_int4) + (tile_obj.user_int5) * map_columns] - game_object_macro_temp.user_int; if(game_object_macro_temp.user_int2 == 10) { game_obj.user_string5 = "tile_road"; game_obj.user_int4 = 1; game_obj.user_int5 = 1; } else if(game_object_macro_temp.user_int2 == 20) { game_obj.user_string5 = "tile_dirt"; game_obj.user_int4 = 1; game_obj.user_int5 = 1; } else if(game_object_macro_temp.user_int2 == 30) { game_obj.user_string5 = "tile_grass"; game_obj.user_int4 = 1; game_obj.user_int5 = 1; } else if(game_object_macro_temp.user_int2 == 0) { game_obj.user_string5 = "tile_black"; game_obj.user_int4 = 1; game_obj.user_int5 = 0; } else { print("ERROR: " + "Unrecognized Tile ID: " + tile_id[(tile_obj.user_int4) + (tile_obj.user_int5) * map_columns]); exit(1); } if(game_object_macro_temp.user_int == 0) { game_obj.user_string5 += "_top_left"; } else if(game_object_macro_temp.user_int == 1) { game_obj.user_string5 += "_top_center"; } else if(game_object_macro_temp.user_int == 2) { game_obj.user_string5 += "_top_right"; } else if(game_object_macro_temp.user_int == 3) { game_obj.user_string5 += "_left"; } else if(game_object_macro_temp.user_int == 4) { game_obj.user_string5 += "_center"; } else if(game_object_macro_temp.user_int == 5) { game_obj.user_string5 += "_right"; } else if(game_object_macro_temp.user_int == 6) { game_obj.user_string5 += "_bottom_left"; } else if(game_object_macro_temp.user_int == 7) { game_obj.user_string5 += "_bottom_center"; } else if(game_object_macro_temp.user_int == 8) { game_obj.user_string5 += "_bottom_right"; } else if(game_object_macro_temp.user_int == 9) { game_obj.user_string5 += "_patch"; }
  tile_walkable[(tile_obj.user_int4) + (tile_obj.user_int5) * map_columns] = game_obj.user_int5;
  if(game_obj.user_int4 == 1)
  {
   game_objects[tile_object_id[(tile_obj.user_int4) + (tile_obj.user_int5) * map_columns]].filename = game_obj.user_string5 + ".bmp";
  }
  else
  {
   game_objects[tile_object_id[(tile_obj.user_int4) + (tile_obj.user_int5) * map_columns]].filename = game_obj.user_string5 + "_0.bmp";
  }
  tile_obj.user_int3 = 0;
 }
}
